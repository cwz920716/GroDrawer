include gro

ahl := signal(5, 0.1);
bhl := signal(5, 0.1);

k := 10; // reporter scaling factor

MAX_SIG := 0.7;

//set("dt", 0.05);

fun abs2 n . if n < 0 then -n else n end;

fun close x y . 
    if x = 0 | y = 0 then
        1.1
    else
        if x > y then
            (x / y - 1) 
        else
            (y / x - 1) 
        end
    end;

program receiver() := {
    gfp := 0;
    p := [ t := 0 ];

    get_signal(ahl) > MAX_SIG & get_signal(bhl) >= MAX_SIG & close (get_signal(ahl)) (get_signal(bhl)) < 0.5 : {
        gfp := 800;
    }

    get_signal(ahl) <= MAX_SIG | get_signal(bhl) < MAX_SIG | close (get_signal(ahl)) (get_signal(bhl)) >= 0.5 : {
        gfp := 0
    }

    selected & just_divided : {
        print ( "After division, cell ", id, " has ", close (get_signal(ahl)) (get_signal(bhl)), " diff molecules" );
        print ( "After division, cell ", id, " has ", abs2(get_signal(ahl) - get_signal(bhl)), " ahl-bhl molecules" );
        print ( "After division, cell ", id, " has ", get_signal(ahl), " ahl molecules" );
        print ( "After division, cell ", id, " has ", get_signal(bhl), " bhl molecules" );
    }

    true : { p.t := p.t + dt }
};

program main() := {
    true : {
        set_signal(ahl,-150,0,100);
        set_signal(bhl,150,0,100);
    }
};

ecoli ( [], program receiver() );
